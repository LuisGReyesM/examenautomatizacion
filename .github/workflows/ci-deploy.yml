name: Deployment Pipeline

on:
  workflow_run:
    workflows: ["Java CI"]
    types:
      - completed
    branches:
      - ci-deploy

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    env:
      CANARY_NAMESPACE: canary
      BLUE_NAMESPACE: blue
      GREEN_NAMESPACE: green
      IMAGE_NAME: examen-app
      VERSION: latest

    steps:
      # ================================
      # STAGE: Checkout
      # ================================
      - uses: actions/checkout@v3

      # ================================
      # STAGE: Set up JDK
      # ================================
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # ================================
      # STAGE: Build JAR
      # ================================
      - name: Build JAR
        run: mvn -B package --file pom.xml

      # ================================
      # STAGE: Verify JAR
      # ================================
      - name: Verify JAR exists
        run: ls -l target/ExamenAutomatizacion-0.0.1-SNAPSHOT.jar

      # ================================
      # STAGE: Build Docker image
      # ================================
      - name: Build Docker image
        run: docker build -t $IMAGE_NAME:$VERSION .

      # ================================
      # STAGE: Deploy Canary
      # ================================
      - name: Deploy Canary
        run: |
          echo "Desplegando aplicación en contenedor Docker (Canary)"
          docker run -d -p 8080:8080 --name ${IMAGE_NAME}-canary $IMAGE_NAME:$VERSION

      # ================================
      # STAGE: Run Acceptance Tests
      # ================================
      - name: Run Acceptance Tests
        run: |
          echo "Esperando que la aplicación esté lista en Canary..."
          for i in {1..30}; do
            STATUS=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8080/actuator/health || true)
            if [ "$STATUS" -eq 200 ]; then
              echo "Aplicación lista!"
              break
            fi
            sleep 2
          done

          STATUS=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8080/actuator/health || true)
          if [ "$STATUS" -ne 200 ]; then
            echo "Tests fallaron: /actuator/health no respondió con 200"
            docker logs ${IMAGE_NAME}-canary
            docker rm -f ${IMAGE_NAME}-canary
            exit 1
          fi

          echo "Tests OK en Canary"

      # ================================
      # STAGE: Deploy Green (simulado)
      # ================================
      - name: Deploy Green
        run: |
          echo "Simulando despliegue Green en namespace $GREEN_NAMESPACE"
          echo "Traffic switch simulado a Green"
          ROLLBACK=false
          if [ "$ROLLBACK" = true ]; then
            echo "Rollback activado: volviendo a Blue"
            exit 1
          fi

      # ================================
      # STAGE: Stop Canary container
      # ================================
      - name: Stop Canary
        if: always()
        run: docker rm -f ${IMAGE_NAME}-canary || true

      # ================================
      # STAGE: Notify
      # ================================
      - name: Notify Team
        run: |
          echo "Despliegue completado exitosamente o rollback realizado si fue necesario"
