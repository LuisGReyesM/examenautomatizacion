name: Deployment Pipeline

on:
  workflow_run:
    workflows: ["Java CI"]
    types:
      - completed
    branches:
      - main
      - ci-deploy

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    env:
      IMAGE_NAME: myapp
      VERSION: latest
      CANARY_CONTAINER: canary
      BLUE_CONTAINER: blue
      GREEN_CONTAINER: green
      PORT_CANARY: 8081
      PORT_GREEN: 8080
    steps:
      # ================================
      # STAGE: Checkout
      # ================================
      - uses: actions/checkout@v3

      # ================================
      # STAGE: Build Docker Image
      # ================================
      - name: Build Docker Image
        run: |
          echo "Construyendo imagen Docker: $IMAGE_NAME:$VERSION"
          docker build -t $IMAGE_NAME:$VERSION .

      # ================================
      # STAGE: Deploy Canary
      # ================================
      - name: Deploy Canary
        run: |
          echo "Desplegando Canary..."
          docker run -d --name $CANARY_CONTAINER -p $PORT_CANARY:8080 $IMAGE_NAME:$VERSION
          echo "Canary disponible en puerto $PORT_CANARY"

      # ================================
      # STAGE: Run Acceptance Tests
      # ================================
      - name: Run Acceptance Tests
        run: |
          echo "Ejecutando Acceptance Tests en Canary"
          if curl -s http://localhost:$PORT_CANARY/actuator/health | grep UP; then
            echo "Tests OK"
          else
            echo "Tests fallaron, abortando despliegue"
            docker stop $CANARY_CONTAINER
            docker rm $CANARY_CONTAINER
            exit 1
          fi

      # ================================
      # STAGE: Blue-Green Switch
      # ================================
      - name: Deploy Green
        run: |
          echo "Deteniendo versión Blue si existe..."
          if [ "$(docker ps -q -f name=$BLUE_CONTAINER)" ]; then
            docker stop $BLUE_CONTAINER
            docker rm $BLUE_CONTAINER
          fi

          echo "Desplegando versión Green"
          docker run -d --name $GREEN_CONTAINER -p $PORT_GREEN:8080 $IMAGE_NAME:$VERSION
          echo "Traffic switch simulado a Green"

      # ================================
      # STAGE: Cleanup Canary
      # ================================
      - name: Remove Canary
        run: |
          echo "Deteniendo Canary..."
          docker stop $CANARY_CONTAINER
          docker rm $CANARY_CONTAINER

      # ================================
      # STAGE: Notify
      # ================================
      - name: Notify Team
        run: |
          echo "Despliegue completado exitosamente. Blue-Green switch simulado."
